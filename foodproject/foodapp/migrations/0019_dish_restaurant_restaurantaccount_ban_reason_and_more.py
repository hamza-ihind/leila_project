# Generated by Django 5.2.1 on 2025-06-30 17:12

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('foodapp', '0018_alter_restaurantdraft_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='dish',
            name='restaurant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dishes', to='foodapp.restaurant'),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='ban_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='ban_until',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='rejection_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='sanction_reason',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='status',
            field=models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('sanctioned', 'Sanctionné'), ('banned', 'Banni'), ('rejected', 'Rejeté')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='status_changed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='restaurantaccount',
            name='status_changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='restaurant_status_changes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='foodapp.restaurant')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dishes', to='foodapp.category'),
        ),
        migrations.CreateModel(
            name='ChatbotKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('dish', 'Moroccan Dish'), ('ingredient', 'Ingredient'), ('etiquette', 'Food Etiquette'), ('fun_fact', 'Fun Fact'), ('market', 'Local Market'), ('custom', 'Custom Knowledge')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('content_fr', models.TextField(verbose_name='French Content')),
                ('keywords', models.CharField(help_text='Comma-separated keywords', max_length=500)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('related_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foodapp.city')),
                ('related_dish', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foodapp.dish')),
            ],
            options={
                'verbose_name_plural': 'Chatbot Knowledge Base',
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('language', models.CharField(choices=[('en', 'English'), ('fr', 'French')], default='en', max_length=10)),
                ('context', models.JSONField(blank=True, default=dict)),
                ('selected_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foodapp.city')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('user', 'User'), ('assistant', 'Assistant'), ('system', 'System')], max_length=10)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='foodapp.chatsession')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantAdminNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_notes', to=settings.AUTH_USER_MODEL)),
                ('restaurant_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_notes', to='foodapp.restaurantaccount')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('sanctioned', 'Sanctionné'), ('banned', 'Banni'), ('rejected', 'Rejeté')], max_length=20)),
                ('new_status', models.CharField(choices=[('pending', 'En attente'), ('approved', 'Approuvé'), ('sanctioned', 'Sanctionné'), ('banned', 'Banni'), ('rejected', 'Rejeté')], max_length=20)),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_status_history', to=settings.AUTH_USER_MODEL)),
                ('restaurant_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='foodapp.restaurantaccount')),
            ],
            options={
                'verbose_name_plural': 'Restaurant status histories',
                'ordering': ['-created_at'],
            },
        ),
    ]
